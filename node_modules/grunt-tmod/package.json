{
  "name": "grunt-tmod",
  "description": "the grunt plugin for tmodjs",
  "version": "0.2.0",
  "homepage": "https://github.com/jsonzhang/grunt-tmodjs",
  "author": {
    "name": "Json",
    "email": "enjoy.doing.19@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jsonzhang/grunt-tmodjs.git"
  },
  "bugs": {
    "url": "https://github.com/jsonzhang/grunt-tmodjs/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/jsonzhang/grunt-tmodjs/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "tmodjs": "*"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt": "~0.4.1",
    "grunt-contrib-watch": "~0.6.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin",
    "tmodjs",
    "seajs",
    "requirejs"
  ],
  "readme": "# grunt-tmod\r\n\r\n前端模板预编译工具 [tmodjs](https://github.com/aui/tmodjs) 的grunt自动化插件。\r\n\r\n## Getting Started\r\n需要环境: Grunt `~0.4.1`\r\n\r\n如果你没有用过 [Grunt](http://gruntjs.com/) , 可以先看一下 [新手入门](http://gruntjs.com/getting-started) 指南, 里面有讲解怎么创建一个 [Gruntfile](http://gruntjs.com/sample-gruntfile) 和如何使用grunt插件. \r\n\r\n顺路推荐 : [中文版的grunt社区](http://www.gruntjs.org/article/home.html)\r\n\r\n\r\n安装插件:\r\n\r\n```shell\r\nnpm install grunt-tmod --save-dev\r\n```\r\n\r\n安装完插件后要在gruntfile里面加上这句代码,载入这个插件:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-tmod');\r\n```\r\n\r\n### 设置\r\n\r\n\r\n##\tsrc\r\n\r\n*\t类型：`String` | `Array`\r\n\r\n模版文件\r\n\r\n##\tdest\r\n\r\n*\t类型：`String`\r\n\r\n输出路径。\r\n\r\n##\toptions\r\n\r\n支持[tmodjs的配置](https://github.com/aui/tmodjs#配置)，还新增如下字段：\r\n\r\n####\toptions.base\r\n\r\n*\t类型：`String`\r\n\r\n指定模板的根目录，以便缩短编译后的模板id访问路径。\r\n\r\n示例：\r\n\r\n```\r\ntmod: {\r\n    template: {\r\n        src: './tpl/src/**/*.html',\r\n        dest: './dist/template.js',\r\n        options: {\r\n            base: './tpl/src'\r\n        } \r\n    }\r\n}\r\n```\r\n\r\n以某个模板为例，默认情况调用模板的路径将可能会很长：\r\n\r\n\ttemplate('./tpl/src/home/main', data)\r\n\t\r\n使用`base`后可以省略模板目录调用模板\r\n\r\n\ttemplate('home/main', data)\r\n\r\n##\t示例\r\n\r\n###\t基本\r\n\r\n```\r\nmodule.exports = function(grunt){\r\n\r\n    grunt.initConfig({\r\n        tmod: {\r\n            template: {\r\n                src: './tpl/**/*.html',\r\n                dest: './dist/template.js',\r\n                options: {\r\n                    combo: true\r\n                } \r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    grunt.loadNpmTasks('grunt-tmod');\r\n\r\n    grunt.registerTask('default', ['tmod']);\r\n\r\n};\r\n\r\n```\r\n\r\n###\t监控模板修改即时编译\r\n\r\n> 原tmodjs有配备的watch功能,在grunt中统一使用[watch插件](https://github.com/gruntjs/grunt-contrib-watch)来实现,所以取消了grunt-tmodjs中的watch参数.具体设置方法可以参照下面带watch的配置示例,也可以参考[grunt-contrib-watch](https://github.com/gruntjs/grunt-contrib-watch)官网的说明.\r\n\r\n先安装watch插件\r\n\r\n```shell\r\nnpm install grunt-contrib-watch --save-dev\r\n```\r\n\r\n```\r\nmodule.exports = function(grunt){\r\n\r\n    grunt.initConfig({\r\n        tmod: {\r\n            template: {\r\n                src: './tpl/**/*.html',\r\n                dest: './dist/template.js',\r\n                options: {\r\n                    combo: true\r\n                } \r\n            }\r\n        },\r\n        watch: {\r\n            template: {\r\n                files: '<%=tmod.template.src%>',\r\n                tasks: ['tmod'],\r\n                options: {\r\n                    spawn: false\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    grunt.loadNpmTasks('grunt-tmod');\r\n    grunt.loadNpmTasks('grunt-contrib-watch');\r\n\r\n    grunt.registerTask('default', ['tmod', 'watch']);\r\n\r\n};\r\n\r\n```\r\n\r\n###\t使用调试模式编译\r\n\r\n运行grunt任务的时候加上`--debug`参数即可：\r\n\r\n\tgrunt --debug\r\n\r\n## Release History\r\n\r\nv 0.2.0 遵循标准的 grunt 路径配置规范，同时支持编译错误显示。注意：不兼容历史版本 14-04-30\r\n\r\nv 0.1.6 修复dest的路径问题 , 原本`dest`属性是放在files属性里 , 0.1.6版本后建议将 `dest` 属性放在 `option` 中, 如本篇 readMe 的代码所示. \r\n如果有多个模版文件目录需要配置,建议使用多个任务的方式来配置,不建议在`src`中放入路径数组.  13-12-08\r\n\r\nv 0.1.5 修复不支持多任务的bug 13-11-14\r\n\r\nv 0.1.4 去除掉打包的tmodjs改为依赖,将内置tmod依赖改为0.0.2版本 13-11-11\r\n\r\nv 0.1.3 第二个版本,配合npm修改版本号,加上参数识别功能  13-11-10\r\n\r\nv 0.0.1 第一个版本  13-10-23\r\n\r\n\r\n## License\r\n\r\nThe MIT license.",
  "readmeFilename": "README.md",
  "_id": "grunt-tmod@0.2.0",
  "_from": "grunt-tmod@~0.2.0"
}
